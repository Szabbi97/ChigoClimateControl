
#include "ChigoIRControl.h"
#include <Arduino.h>

// Static raw IR data arrays
const uint16_t ChigoIRControl::rawData_on[99] = {6608, 7584, 642, 3368, 644, 3364, 646, 3368, 644, 1398, 616, 3366, 644, 3366, 646, 3366, 644, 3358, 644, 1396, 618, 1396, 616, 1398, 618, 3366, 644, 1398, 616, 1398, 618, 1396, 618, 1512, 616, 1396, 618, 3366, 644, 3366, 646, 1396, 618, 1396, 616, 3366, 646, 1396, 642, 1364, 616, 3366, 644, 1396, 618, 1394, 620, 3366, 644, 3368, 644, 1370, 644, 3366, 644, 3368, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 646, 3364, 646, 1368, 646, 1342, 644, 3368, 646, 1368, 646, 3366, 668, 1344, 646, 3364, 670, 1344, 644, 3366, 644, 3314, 644};
const uint16_t ChigoIRControl::rawData_off[99] = {6610, 7582, 644, 3364, 646, 3366, 644, 3368, 644, 1398, 616, 3366, 646, 3366, 644, 3366, 646, 3356, 644, 1398, 616, 1398, 616, 1398, 616, 3366, 644, 1398, 616, 1398, 618, 1398, 616, 1512, 616, 1398, 616, 3366, 644, 3366, 646, 3366, 644, 1398, 616, 3368, 644, 1398, 616, 1388, 618, 3366, 644, 1398, 616, 1398, 616, 1396, 616, 3366, 644, 1398, 616, 3366, 644, 3366, 646, 1394, 620, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 646, 1368, 644, 1342, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 646, 3314, 646};
const uint16_t ChigoIRControl::rawData_18[99] = {6608, 7582, 644, 3366, 646, 3366, 644, 3366, 646, 1398, 616, 3364, 646, 3366, 644, 3366, 646, 3358, 644, 1398, 616, 1396, 618, 1396, 616, 3366, 646, 1396, 616, 1398, 616, 1398, 618, 1510, 616, 1398, 616, 3366, 644, 3366, 646, 1396, 616, 1396, 616, 1398, 616, 3366, 646, 3356, 644, 3366, 644, 1372, 642, 1370, 644, 3366, 644, 3366, 646, 3366, 646, 1368, 644, 1368, 646, 1370, 644, 3366, 646, 1368, 644, 3366, 644, 1370, 644, 3368, 644, 1370, 644, 1344, 646, 3364, 644, 1370, 644, 3366, 646, 1368, 646, 3364, 670, 1344, 646, 3364, 646, 3312, 644};
const uint16_t ChigoIRControl::rawData_19[99] = {6608, 7580, 644, 3366, 646, 3368, 644, 3366, 644, 1400, 616, 3366, 644, 3366, 644, 3366, 644, 3358, 644, 1398, 616, 1398, 616, 1398, 616, 3366, 644, 1396, 618, 1398, 616, 1396, 618, 1512, 616, 1398, 616, 3366, 644, 3366, 644, 1398, 616, 3366, 644, 1396, 618, 3364, 646, 3358, 644, 3366, 644, 1396, 616, 1396, 618, 3368, 644, 1396, 642, 3342, 644, 1370, 642, 1370, 644, 1370, 644, 3364, 646, 1368, 644, 3366, 646, 1368, 670, 3340, 644, 1370, 644, 1344, 644, 3366, 644, 1368, 644, 3368, 644, 1368, 646, 3366, 646, 1368, 646, 3366, 644, 3312, 646};
const uint16_t ChigoIRControl::rawData_20[99] = {6610, 7582, 644, 3366, 644, 3368, 644, 3366, 644, 1398, 614, 3368, 644, 3366, 646, 3364, 646, 3356, 646, 1398, 614, 1400, 614, 1398, 616, 3366, 646, 1398, 616, 1400, 614, 1398, 616, 1512, 616, 1398, 614, 3366, 644, 3368, 642, 1400, 616, 3364, 646, 3368, 644, 1398, 616, 3356, 646, 3368, 644, 1398, 616, 1398, 614, 3366, 646, 1398, 616, 1398, 616, 3368, 642, 1398, 616, 1398, 616, 3366, 644, 1398, 616, 3366, 646, 1398, 616, 3366, 646, 1398, 614, 1372, 616, 3366, 646, 1396, 618, 3364, 646, 1396, 618, 3366, 644, 1398, 616, 3366, 646, 3312, 644};
const uint16_t ChigoIRControl::rawData_21[99] = {6610, 7580, 644, 3366, 644, 3366, 644, 3366, 646, 1398, 616, 3366, 646, 3366, 644, 3366, 646, 3358, 644, 1396, 618, 1396, 616, 1398, 616, 3366, 644, 1398, 616, 1398, 618, 1396, 618, 1512, 618, 1396, 616, 3366, 644, 3368, 642, 1398, 616, 3368, 642, 3366, 644, 1396, 618, 3356, 646, 3366, 646, 1370, 644, 1372, 642, 3366, 644, 1372, 642, 1370, 642, 3366, 644, 1372, 644, 1370, 644, 3366, 642, 1372, 644, 3366, 644, 1370, 644, 3368, 644, 1370, 644, 1342, 644, 3368, 644, 1368, 644, 3366, 646, 1368, 646, 3366, 646, 1368, 646, 3364, 646, 3316, 642};
const uint16_t ChigoIRControl::rawData_22[99] = {6608, 7580, 646, 3366, 644, 3366, 646, 3364, 646, 1398, 616, 3364, 646, 3366, 644, 3366, 646, 3356, 644, 1398, 616, 1396, 616, 1398, 616, 3368, 642, 1398, 618, 1396, 616, 1396, 618, 1512, 616, 1398, 616, 3366, 644, 3368, 644, 1396, 616, 1398, 616, 3366, 644, 1398, 616, 3358, 644, 3366, 646, 1396, 618, 1396, 642, 3342, 644, 3366, 646, 1396, 618, 3366, 644, 1372, 642, 1370, 644, 3366, 646, 1368, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 1344, 644, 3366, 644, 1370, 644, 3366, 646, 1368, 646, 3364, 646, 1370, 644, 3366, 668, 3288, 646};
const uint16_t ChigoIRControl::rawData_23[99] = {6606, 7582, 644, 3366, 644, 3366, 646, 3366, 644, 1398, 616, 3366, 646, 3366, 644, 3366, 644, 3358, 644, 1398, 616, 1398, 618, 1396, 618, 3366, 646, 1396, 616, 1396, 618, 1396, 618, 1510, 618, 1396, 618, 3366, 644, 3366, 644, 1396, 618, 3366, 644, 1398, 616, 1396, 642, 3334, 644, 3366, 646, 1394, 618, 1396, 644, 3340, 644, 1396, 618, 3366, 644, 3366, 644, 1370, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 646, 1368, 644, 3368, 644, 1368, 644, 1344, 644, 3366, 646, 1368, 644, 3366, 644, 1370, 644, 3364, 646, 1368, 670, 3340, 646, 3312, 644};
const uint16_t ChigoIRControl::rawData_24[99] = {6608, 7580, 646, 3366, 644, 3366, 644, 3366, 646, 1396, 618, 3366, 644, 3364, 646, 3366, 644, 3356, 670, 1372, 642, 1370, 618, 1396, 616, 3368, 648, 1392, 618, 1396, 618, 1396, 618, 1510, 618, 1396, 618, 3366, 644, 3366, 646, 1372, 640, 1372, 640, 1396, 620, 1394, 618, 3356, 646, 3368, 642, 1370, 644, 1370, 644, 3366, 644, 3366, 644, 3366, 644, 3368, 644, 1368, 644, 1370, 644, 3366, 646, 1366, 646, 3366, 646, 1368, 644, 3366, 644, 1370, 644, 1342, 644, 3366, 644, 1368, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 3368, 642, 3316, 642};
const uint16_t ChigoIRControl::rawData_25[99] = {6608, 7582, 644, 3368, 644, 3366, 646, 3364, 646, 1398, 616, 3366, 646, 3366, 644, 3368, 644, 3358, 644, 1398, 618, 1396, 616, 1398, 616, 3366, 644, 1398, 616, 1398, 616, 1398, 616, 1512, 616, 1398, 616, 3366, 644, 3366, 646, 1396, 616, 3366, 646, 3366, 644, 3366, 644, 1388, 616, 3366, 644, 1398, 616, 1398, 616, 3366, 644, 1396, 616, 1398, 616, 1398, 616, 3366, 644, 1398, 618, 3366, 644, 1396, 618, 3366, 644, 1396, 618, 3366, 644, 1396, 618, 1370, 618, 3364, 646, 1396, 618, 3366, 644, 1370, 644, 3368, 644, 1370, 644, 3366, 646, 3312, 644};
const uint16_t ChigoIRControl::rawData_26[99] = {6610, 7584, 642, 3366, 644, 3366, 644, 3366, 646, 1396, 616, 3368, 642, 3368, 642, 3366, 646, 3356, 644, 1398, 616, 1398, 616, 1396, 616, 3368, 644, 1396, 616, 1396, 618, 1396, 616, 1512, 616, 1396, 616, 3366, 646, 3364, 646, 1396, 644, 1370, 618, 3364, 646, 3366, 644, 1388, 618, 3366, 644, 1396, 618, 1396, 618, 3366, 646, 3366, 644, 1396, 618, 1370, 642, 3368, 668, 1346, 644, 3366, 646, 1370, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 1342, 644, 3366, 644, 1370, 644, 3366, 644, 1370, 644, 3366, 646, 1368, 646, 3364, 646, 3312, 646};
const uint16_t ChigoIRControl::rawData_27[99] = {6608, 7580, 644, 3366, 644, 3368, 644, 3366, 646, 1398, 616, 3366, 644, 3366, 644, 3364, 646, 3358, 644, 1398, 616, 1398, 616, 1398, 616, 3368, 644, 1398, 616, 1398, 616, 1396, 618, 1512, 616, 1398, 616, 3368, 644, 3366, 644, 1398, 616, 3366, 646, 1396, 618, 3366, 644, 1390, 618, 3364, 646, 1398, 616, 1396, 618, 3366, 644, 1396, 616, 3366, 644, 1396, 618, 3366, 644, 1396, 618, 3366, 644, 1396, 618, 3368, 644, 1396, 618, 3368, 644, 1394, 620, 1346, 640, 3366, 646, 1370, 642, 3366, 646, 1370, 644, 3366, 670, 1346, 642, 3366, 644, 3314, 642};
const uint16_t ChigoIRControl::rawData_28[99] = {6608, 7580, 646, 3366, 646, 3366, 644, 3368, 644, 1396, 616, 3366, 644, 3366, 646, 3366, 644, 3358, 646, 1396, 618, 1396, 618, 1396, 618, 3366, 644, 1396, 618, 1396, 618, 1396, 618, 1510, 618, 1396, 618, 3366, 644, 3366, 644, 1396, 618, 1396, 618, 1396, 618, 3366, 646, 1386, 618, 3366, 644, 1396, 642, 1348, 642, 3366, 644, 3366, 646, 3366, 644, 1368, 646, 3366, 644, 1370, 644, 3368, 644, 1368, 646, 3364, 644, 1370, 646, 3366, 646, 1368, 646, 1342, 646, 3366, 668, 1344, 646, 3364, 670, 1344, 670, 3340, 644, 1370, 668, 3342, 644, 3314, 644};
const uint16_t ChigoIRControl::rawData_29[99] = {6610, 7580, 646, 3366, 644, 3366, 646, 3366, 644, 1398, 616, 3366, 644, 3366, 644, 3368, 644, 3356, 646, 1398, 616, 1396, 616, 1396, 616, 3366, 646, 1396, 618, 1396, 616, 1396, 616, 1512, 616, 1396, 616, 3368, 642, 3366, 644, 1396, 616, 3366, 644, 3366, 646, 1396, 618, 1388, 618, 3366, 644, 1396, 618, 1396, 618, 3366, 644, 1396, 618, 1396, 618, 3368, 644, 3366, 644, 1396, 620, 3364, 644, 1396, 618, 3368, 644, 1370, 644, 3366, 644, 1370, 642, 1344, 644, 3368, 644, 1368, 644, 3366, 644, 1370, 644, 3366, 644, 1368, 646, 3366, 670, 3288, 644};
const uint16_t ChigoIRControl::rawData_30[99] = {6610, 7582, 644, 3366, 644, 3366, 644, 3366, 644, 1398, 616, 3366, 644, 3366, 644, 3368, 644, 3356, 646, 1396, 616, 1398, 616, 1398, 616, 3366, 644, 1398, 616, 1398, 616, 1396, 618, 1510, 618, 1398, 616, 3368, 644, 3366, 644, 1396, 618, 1396, 616, 3366, 644, 1396, 618, 1388, 616, 3366, 644, 1396, 618, 1396, 618, 3366, 644, 3366, 644, 1396, 618, 3364, 646, 3366, 670, 1370, 618, 3366, 644, 1396, 618, 3366, 644, 1370, 644, 3366, 644, 1370, 646, 1342, 644, 3366, 644, 1368, 644, 3366, 646, 1370, 644, 3366, 644, 1368, 644, 3366, 644, 3314, 644};

ChigoIRControl::ChigoIRControl(uint16_t irLedPin) : irsend(irLedPin) {}

void ChigoIRControl::begin() {
    irsend.begin();
}

void ChigoIRControl::powerOn() {
    irsend.sendRaw(rawData_on, 99, 38);
}

void ChigoIRControl::powerOff() {
    irsend.sendRaw(rawData_off, 99, 38);
}

bool ChigoIRControl::setTemperature(int temp) {
    switch (temp) {
        case 18:
            irsend.sendRaw(rawData_18, 99, 38);
            break;
        case 19:
            irsend.sendRaw(rawData_19, 99, 38);
            break;
        case 20:
            irsend.sendRaw(rawData_20, 99, 38);
            break;
        case 21:
            irsend.sendRaw(rawData_21, 99, 38);
            break;
        case 22:
            irsend.sendRaw(rawData_22, 99, 38);
            break;
        case 23:
            irsend.sendRaw(rawData_23, 99, 38);
            break;
        case 24:
            irsend.sendRaw(rawData_24, 99, 38);
            break;
        case 25:
            irsend.sendRaw(rawData_25, 99, 38);
            break;
        case 26:
            irsend.sendRaw(rawData_26, 99, 38);
            break;
        case 27:
            irsend.sendRaw(rawData_27, 99, 38);
            break;
        case 28:
            irsend.sendRaw(rawData_28, 99, 38);
            break;
        case 29:
            irsend.sendRaw(rawData_29, 99, 38);
            break;
        case 30:
            irsend.sendRaw(rawData_30, 99, 38);
            break;
        default:
            return false;
    }
    return true;
}
